# Generate github metadata file action.yml for generating db migrations
name: 'DB Migrations'
description: 'Run DB migrations'
branding:
  icon: 'database'
  color: 'purple'
inputs:
  repo_token:
    description: 'Github token'
    required: true
  migration_config_file:
    description: 'Migration configuration file'
    default: './db.migration.json'
  debug:
    description: 'show debug logs (true|false)'
    default: 'false'

runs:
  using: composite
  # using: node20
  steps:
    - name: Print GitHub Context
      shell: bash
      run: echo "${{ toJson(github) }}"
    # - name: Fetch PR details
    #   id: pr_details
    #   shell: bash
    #   # if: ${{ !env.ACT }}
    #   env:
    #     REPO_TOKEN: ${{ inputs.repo_token }}
    #   run: |
    #     PR_DETAILS=$(curl -s -L -H "Authorization: token $REPO_TOKEN" "${{ github.event.issue.pull_request.url }}")
    #     # echo "PR_DETAILS=$PR_DETAILS" >> $GITHUB_ENV
    #     echo "::set-output name=head_sha::$(echo "$PR_DETAILS" | jq -r .head.sha)"
    #     echo "::set-output name=labels::$(echo "$PR_DETAILS" | jq -c .labels)"
    # - name: set head branch
    #   shell: bash
    #   # if: ${{ !env.ACT }}
    #   run: |
    #     echo ${{ steps.pr_details.outputs.head_sha }}
    # - name: checkout repo
    #   uses: actions/checkout@v3
    #   # if: ${{ !env.ACT }}
    #   with:
    #     ref: ${{ steps.pr_details.outputs.head_sha }}
    - name: migration approvals
      shell: bash
      run: node $GITHUB_ACTION_PATH/dist/index.js
      # env:
        # REPO_TOKEN: ${{ inputs.repo_token }}
        # MIGRATION_CONFIG_FILE: ${{ inputs.migration_config_file }}
        # AWS_ACCESS_KEY_ID: ${{ ${{ inputs.aws_access_key_id }}
        # AWS_SECRET_ACCESS_KEY: ${{ ${{ inputs.aws_access_key_secret }}
        # AWS_REGION: ${{ ${{ inputs.aws_region }}
        # AWS_ENDPOINT_URL: ${{ ${{ inputs.aws_endpoint_url }}
        # DEBUG: ${{ inputs.debug }}